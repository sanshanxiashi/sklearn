这个实验去除了所有 特征为0的样例。


import numpy as np
from sklearn import preprocessing

#导入数据
my_X=np.loadtxt(open("/home/hadoop/Desktop/data/2_1.csv","rb"),delimiter=",",skiprows=0,dtype=np.float,usecols=(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26))

my_y=np.loadtxt(open("/home/hadoop/Desktop/data/2_1.csv","rb"),delimiter=",",skiprows=0,dtype=np.float,usecols=(29,))

X = my_X
y = my_y

#预处理，标准化
scaler = preprocessing.StandardScaler().fit(my_X)
scaler.mean_ 
scaler.scale_ 
X = scaler.transform(my_X)

#建立模型
from sklearn.svm import SVR
svr_rbf = SVR(kernel='rbf', C=1e3, gamma=0.1)
y_rbf = svr_rbf.fit(X, y).predict(X)


#持久化：
from sklearn.externals import joblib
joblib.dump(svr_rbf , 'svr_rbf.pkl')
svr_rbf = joblib.load('svr_rbf.pkl')



#训练集：测试集 = 0.8 : 0.2 = 19400 , 24249
#rbf
  y_rbf = svr_rbf.fit(X[0:19400], y[0:19400])
  y_pred = y_rbf.predict(X[19400:24249])

  #Mean absolute error
  from sklearn.metrics import mean_absolute_error
  y_true = y[19400:24249]
  y_pred = y_rbf
  mean_absolute_error(y_true, y_pred)
(1)  #3.081256614984258

  #Mean squared error
  from sklearn.metrics import mean_squared_error
  mean_squared_error(y_true, y_pred)
(2)  #25.504185386215955

#lin
  
#poly
  svr_poly = SVR(kernel='poly', C=1e3, degree=2)
  y_poly = svr_poly.fit(X[0:19400], y[0:19400]).predict(X[19400:24249])
  #跑不出来
  
  svr_poly = SVR(kernel='poly', C=1e3, degree=1)


#画图
	import matplotlib.pyplot as plt
	plt.scatter(X[:,:1], y, color='darkorange', label='data')
	plt.xlabel('f1')
	plt.ylabel('y')
	plt.show()
	plt.close('all')
#R^2系数
	score = svr_rbf.score(X[19400:24249], y[19400:24249])
(3)	#-0.30026617999832128s
